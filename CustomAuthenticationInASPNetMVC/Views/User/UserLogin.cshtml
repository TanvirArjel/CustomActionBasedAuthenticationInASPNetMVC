@model CustomAuthenticationInASPNetMVC.ViewModels.UserLoginViewModel

@{
    ViewBag.Title = "UserLogin";
}
<br/>
<div class="panel panel-default">
    <div class="panel-heading text-center">
        <h3><strong>User Login</strong></h3>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm("UserLogin","User", new { ReturnUrl = ViewBag.ReturnUrl },FormMethod.Post))
        {
            @Html.AntiForgeryToken()
    
            <div class="form-horizontal">
            
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        <span class="text-danger">@ViewBag.UserNotExistsError</span>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        <span class="text-danger">@ViewBag.LogInErrorMessage</span>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Login" class="btn btn-default" />
                        <a class="btn btn-success" href="@Url.Action("ForgotPassword","Manage")">Forgot password?</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
