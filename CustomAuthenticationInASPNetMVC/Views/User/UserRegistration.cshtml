@using CustomAuthenticationInASPNetMVC.Models
@model CustomAuthenticationInASPNetMVC.ViewModels.UserRegistrationViewModel

@{
    ViewBag.Title = "Create User";
}
<br/>
<div class="panel panel-default">
    <div class="panel-heading">
        <span style="font-size: 25px;">Create | User</span>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm()) 
        {
            @Html.AntiForgeryToken()
    
            <div class="form-horizontal">
        
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="row">
                    <div class="col-md-6">
                        <div class="input-group">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "input-group-addon" })
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6">
                        <div class="input-group">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "input-group-addon" })
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                    
                    <div class="col-md-6">
                        <div class="input-group">
                            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "input-group-addon" })
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        <span class="text-danger">@ViewBag.UserNameExistsError</span>
                    </div>
                    <div class="col-md-6">
                        <div class="input-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "input-group-addon" })
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6">
                        <div class="input-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "input-group-addon" })
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                    
                    <div class="col-md-6">
                        <div class="input-group">
                            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "input-group-addon" })
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                    
                    
                </div>
                
                <div class="row">
                    <div class="col-md-12">
                        <span class="btn btn-default"><strong>Select Role Wise Permissions for this user <i class="fa fa-arrow-circle-down" aria-hidden="true"></i></strong></span>
                        <br/>
                        <br/>
                        @{
                            //var count = Enumerable.Count(ViewBag.AllRoles);
                            List<Role> roles = ViewBag.AllRoles;
                            foreach (var role in roles)
                            {

                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <span class="role btn btn-default">
                                            <strong>Role:</strong>
                                            <input type="checkbox" name="selectedRoles" value="@role.RoleId"/>
                                            @role.RoleName
                                        </span>

                                    </div>
                                    <div class="panel-body">
                                        @{

                                            foreach (var actionCategory in role.ActionCategories)
                                            {

                                                <div style="border: 1px solid #000; padding: 10px">
                                                    <span class="action-cateogry btn  btn-default">
                                                        <input type="checkbox" name="selectedActionCategories" value="@actionCategory.ActionCategoryId"/>
                                                        <strong>@actionCategory.ActionCategoryName</strong>
                                                    </span>

                                                    <br/>
                                                    <hr/>
                                                    @{
                                                        var count = Enumerable.Count(actionCategory.ControllerActions);
                                                        foreach (var controllerAction in actionCategory.ControllerActions)
                                                        {

                                                            <span class="controller-action btn btn-default">
                                                                <input type="checkbox" name="selectedActions" value="@controllerAction.ActionId"/>
                                                                @controllerAction.ActionName
                                                            </span>

                                                            if (--count > 0)
                                                            {
                                                                @:|
                                                            }
                                                        }
                                                    }

                                                </div>

                                                <br/>
                                                <br/>

                                            }
                                        }

                                    </div>
                                </div>
                            }
                        }

                    </div>


                    <br/>

                </div>
               

  

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                        @Html.ActionLink("Back to List", "UserList", null, new { @class = "btn btn-default" })
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
   <script src="~/Scripts/CustomJs/security.js"></script>
}
