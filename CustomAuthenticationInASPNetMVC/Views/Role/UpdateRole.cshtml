@using CustomAuthenticationInASPNetMVC.Models
@model Role

@{
    ViewBag.Title = "Edit";
}
<br />
<div class="panel panel-primary">
    <div class="panel-heading text-center">
        <h3><strong>Update Role</strong></h3>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.RoleId)
                @{
                    bool isSuperAdmin = String.Equals(Model.RoleName, "SuperAdmin",StringComparison.CurrentCultureIgnoreCase);
                    
                }

                <div class="row">
                    <div class="col-md-6">
                        <div class="input-group">
                            @Html.LabelFor(model => model.RoleName, htmlAttributes: new { @class = "input-group-addon" })
                            @if(isSuperAdmin)
                            {
                                <span class="form-control">
                                    @Html.DisplayFor(model => model.RoleName)
                                    @Html.HiddenFor(model => model.RoleName)
                                </span>
                               
                            }
                            else
                            {
                                @Html.EditorFor(model => model.RoleName, new { htmlAttributes = new { @class = "form-control" } })
                            }
                        </div>
                        @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6">
                        <div class="input-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "input-group-addon" })
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                
                @{
                    if (isSuperAdmin)
                    {
                        <span class="btn btn-default"><strong>He/She has all rights and permissions in this application</strong></span>
                        <br/>
                        <br/>
                    }
                    else
                    {
                        <span class="btn btn-default"><strong>Select Permissions for this role <i class="fa fa-arrow-circle-down" aria-hidden="true"></i></strong></span>
                        <br />
                        <br />
                        <div class="form-group">

                            <div class="form-control" style="height: auto">
                                @{
                                    List<ActionCategory> actionCategories = ViewBag.AllActionCategories;

                                    foreach (var actionCategory in actionCategories)
                                    {
                                        var isActionCategoryChecked = Model.ControllerActions.Any(r => r.ActionCategoryId == actionCategory.ActionCategoryId);
                                        var buttonClassForActionCategory = "btn-default";
                                        if (isActionCategoryChecked)
                                        {
                                            buttonClassForActionCategory = "btn-success";
                                        }
                                        <div style="border: 1px solid #000; padding: 10px">
                                            <span class="action-cateogry btn @buttonClassForActionCategory">
                                                <input type="checkbox" name="selectedActionCategories" value="@actionCategory.ActionCategoryId" @if (isActionCategoryChecked) { <text> Checked</text>} />
                                                <strong>@actionCategory.ActionCategoryName</strong>
                                            </span>
                                            <hr />
                                            @{
                                                foreach (var controllerAction in actionCategory.ControllerActions)
                                                {
                                                    var isControllerActionChecked = Model.ControllerActions.Any(r => r.ActionId == controllerAction.ActionId);
                                                    var buttonClassForControllerAction = "btn-default";
                                                    if (isControllerActionChecked)
                                                    {
                                                        buttonClassForControllerAction = "btn-primary";
                                                    }
                                                    <span class="controller-action btn @buttonClassForControllerAction">
                                                        <input type="checkbox" name="selectedActions" value="@controllerAction.ActionId" @if (isControllerActionChecked) { <text> Checked</text>} />
                                                        @controllerAction.ActionName
                                                    </span>
                                                }
                                            }

                                        </div>

                                        <br/>

                                                }
                                }
                            </div>
                        </div>
                    }
                }
                
               
                <div class="text-center">
                   
                    <input type="submit" value="Save" class="btn btn-success" />
                    <a class="btn btn-primary" href="@Url.Action("RoleList")">Back to List</a>
                       
                   
                </div>
            </div>
       }
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/CustomJs/security.js"></script>
}
